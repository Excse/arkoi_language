digraph CFG {
    node [shape=box, labelloc="t", labeljust="l"]
    L0 [label="$1 = alloca @u64\l$2 = cast 1 @bool to @u32\l$3 = cast 5 @f32 to @f64\l$4 = call ok($3)\l$5 = cast $4 @bool to @u32\l$6 = mul @u32 $2, $5\l$7 = cast 1 @bool to @u32\l$8 = add @u32 $6, $7\l$9 = cast $8 @u32 to @s32\l$10 = cast 10.5 @f32 to @f64\l$11 = call test1($9, $10)\l$12 = mul @f32 $11, 2.01\l$13 = cast 42 @s32 to @f32\l$14 = sub @f32 $12, $13\l$15 = cast $14 @f32 to @u64\lstore @u64 $15 $1\lgoto L1\l"]
    L0 -> L1 [label="Next"]
    L1 [label="L1:\l$16 = load @u64 $1\lret $16\l"]
    L2 [label="$1 = alloca @bool\l$2 = alloca @f64\lstore @f64 foo1 $2\l$3 = load @f64 $2\l$4 = cast 5 @f32 to @f64\l$5 = gth @f64 $3, $4\lif $5 goto L4\l"]
    L2 -> L5 [label="Next"]
    L2 -> L4 [label="Branch"]
    L4 [label="L4:\l$6 = cast 0 @f32 to @f64\lstore @f64 $6 $2\lgoto L6\l"]
    L4 -> L6 [label="Next"]
    L6 [label="L6:\l$12 = load @f64 $2\l$13 = call test2(2, $12)\l$14 = cast $13 @f32 to @bool\lstore @bool $14 $1\lgoto L3\l"]
    L6 -> L3 [label="Next"]
    L5 [label="L5:\l$7 = load @f64 $2\l$8 = cast 10 @f32 to @f64\l$9 = gth @f64 $7, $8\lif $9 goto L7\l"]
    L5 -> L8 [label="Next"]
    L5 -> L7 [label="Branch"]
    L7 [label="L7:\l$10 = cast 20 @f32 to @f64\lstore @f64 $10 $2\lgoto L9\l"]
    L7 -> L9 [label="Next"]
    L9 [label="L9:\lgoto L6\l"]
    L9 -> L6 [label="Next"]
    L8 [label="L8:\l$11 = cast 21 @f32 to @f64\lstore @f64 $11 $2\lgoto L9\l"]
    L8 -> L9 [label="Next"]
    L3 [label="L3:\l$15 = load @bool $1\lret $15\l"]
    L10 [label="$1 = alloca @f32\l$2 = alloca @s32\lstore @s32 foo2 $2\l$3 = alloca @f64\lstore @f64 bar $3\l$4 = load @s32 $2\l$5 = cast $4 @s32 to @f64\l$6 = load @f64 $3\l$7 = lth @f64 $5, $6\lif $7 goto L12\l"]
    L10 -> L13 [label="Next"]
    L10 -> L12 [label="Branch"]
    L12 [label="L12:\l$8 = load @f64 $3\l$9 = load @s32 $2\l$10 = cast $9 @s32 to @f64\l$11 = mul @f64 $8, $10\l$12 = cast $11 @f64 to @f32\lstore @f32 $12 $1\lgoto L11\l"]
    L12 -> L11 [label="Next"]
    L13 [label="L13:\l$13 = load @s32 $2\l$14 = cast $13 @s32 to @f64\l$15 = load @f64 $3\l$16 = mul @f64 $14, $15\l$17 = cast $16 @f64 to @f32\lstore @f32 $17 $1\lgoto L11\l"]
    L13 -> L11 [label="Next"]
    L11 [label="L11:\l$18 = load @f32 $1\lret $18\l"]
    L15 [label="$1 = alloca @f32\l$2 = alloca @s32\lstore @s32 foo2 $2\l$3 = alloca @f64\lstore @f64 bar $3\l$4 = load @s32 $2\l$5 = cast $4 @s32 to @f64\l$6 = load @f64 $3\l$7 = lth @f64 $5, $6\lif $7 goto L17\l"]
    L15 -> L18 [label="Next"]
    L15 -> L17 [label="Branch"]
    L17 [label="L17:\l$8 = load @f64 $3\l$9 = load @s32 $2\l$10 = cast $9 @s32 to @f64\l$11 = mul @f64 $8, $10\l$12 = cast $11 @f64 to @f32\lstore @f32 $12 $1\lgoto L16\l"]
    L17 -> L16 [label="Next"]
    L18 [label="L18:\l$13 = load @s32 $2\l$14 = cast $13 @s32 to @f64\l$15 = load @f64 $3\l$16 = mul @f64 $14, $15\lstore @f64 $16 $3\lgoto L19\l"]
    L18 -> L19 [label="Next"]
    L19 [label="L19:\l$17 = load @f64 $3\l$18 = cast $17 @f64 to @f32\lstore @f32 $18 $1\lgoto L16\l"]
    L19 -> L16 [label="Next"]
    L16 [label="L16:\l$19 = load @f32 $1\lret $19\l"]
}